name: Release

on:
  push:
    tags:
      - v*

permissions:
  contents: read

jobs:
  goreleaser:
    permissions:
      contents: write
    runs-on: oracle-vm-24cpu-96gb-x86-64
    timeout-minutes: 60
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
      tag_name: ${{ steps.tag.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5
        with:
          go-version-file: go.mod

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a
        id: run-goreleaser
        with:
          version: latest
          distribution: goreleaser
          args: release --clean --skip=validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate subject
        id: hash
        env:
          ARTIFACTS: "${{ steps.run-goreleaser.outputs.artifacts }}"
        run: |
          set -euo pipefail
          hashes=$(echo $ARTIFACTS | jq --raw-output '.[] | {name, "digest": (.extra.Digest // .extra.Checksum)} | select(.digest) | {digest} + {name} | join("  ") | sub("^sha256:";"")' | base64 -w0)
          if test "$hashes" = ""; then # goreleaser < v1.13.0
            checksum_file=$(echo "$ARTIFACTS" | jq -r '.[] | select (.type=="Checksum") | .path')
            hashes=$(cat $checksum_file | base64 -w0)
          fi
          echo "hashes=$hashes" >> $GITHUB_OUTPUT

      - name: Set tag output
        id: tag
        run: echo "tag_name=${GITHUB_REF#refs/*/}" >> "$GITHUB_OUTPUT"

  provenance:
    needs: [goreleaser]
    permissions:
      id-token: write
      contents: write
      actions: read
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.1.0
    with:
      base64-subjects: "${{ needs.goreleaser.outputs.hashes }}"

  upload-provenance:
    needs: [goreleaser, provenance]
    permissions:
      contents: write
    runs-on: oracle-vm-24cpu-96gb-x86-64
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Download SLSA provenance artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: multiple.intoto.jsonl
          path: artifacts

      - name: Upload SLSA Provenance Attestation to Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ needs.goreleaser.outputs.tag_name }}
        run: |
          set -euxo pipefail
          ARTIFACT_PATH="artifacts/multiple.intoto.jsonl"
          gh release upload "$TAG_NAME" "$ARTIFACT_PATH" --clobber
