name: CI

on:
  push:
    branches: [main, release-*]
    paths-ignore: ['**.md', '**.png', '**.jpg', '**.svg', '**/docs/**']
  pull_request:
    branches: [main, release-*]
    paths-ignore: ['**.md', '**.png', '**.jpg', '**.svg', '**/docs/**']
  schedule:
    - cron: '0 4 * * *'

permissions:  
  contents: read

jobs:
  test:
    name: Test
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          submodules: recursive

      - name: Install Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34
        with:
          go-version-file: go.mod

      - name: Enable local IPv6
        run: |-
          sudo sysctl -w net.ipv6.conf.all.disable_ipv6=0
          sudo ip -6 addr add fd00::1/64 dev eth0
          sudo ip addr

      - name: Run Unit tests
        run: |-
          # switch to installed go
          sudo ln -sf `which go` `sudo which go`
          go version
          sudo go version
          sudo make test-coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.txt
          flags: unittests

  build:
    name: Build
    timeout-minutes: 20
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          submodules: recursive

      - name: Setup Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34
        with:
          go-version-file: go.mod

      - name: Setup QEMU
        uses: docker/setup-qemu-action@4574d27a4764455b42196d70a065bc6853246a25

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca

      - name: Cache Docker layers
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Scheduler Image
        uses: docker/build-push-action@0adf9959216b96bec444f325f1e493d4aa344497
        with:
          context: .
          file: build/images/scheduler/Dockerfile
          push: false
          tags: dragonflyoss/scheduler:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Build Manager Image
        uses: docker/build-push-action@0adf9959216b96bec444f325f1e493d4aa344497
        with:
          context: .
          file: build/images/manager/Dockerfile
          push: false
          tags: dragonflyoss/manager:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Build Dfdaemon Image
        uses: docker/build-push-action@0adf9959216b96bec444f325f1e493d4aa344497
        with:
          context: .
          file: build/images/dfdaemon/Dockerfile
          push: false
          tags: dragonflyoss/dfdaemon:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
